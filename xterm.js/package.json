{
  "name": "xterm",
  "description": "Full xterm terminal, in your browser",
  "version": "3.14.0",
  "main": "lib/public/Terminal.js",
  "types": "typings/xterm.d.ts",
  "repository": "https://github.com/xtermjs/xterm.js",
  "license": "MIT",
  "devDependencies": {
    "@types/chai": "^3.4.34",
    "@types/glob": "^5.0.35",
    "@types/jsdom": "11.0.1",
    "@types/mocha": "^2.2.33",
    "@types/node": "6.0.108",
    "@types/puppeteer": "^1.12.4",
    "@types/utf8": "^2.1.6",
    "@types/webpack": "^4.4.11",
    "browserify": "^13.3.0",
    "chai": "3.5.0",
    "coveralls": "^3.0.1",
    "express": "4.13.4",
    "express-ws": "2.0.0-rc.1",
    "fs-extra": "^1.0.0",
    "glob": "^7.0.5",
    "gulp": "3.9.1",
    "gulp-cli": "^1.2.2",
    "gulp-concat": "^2.6.1",
    "gulp-mocha": "^3.0.1",
    "gulp-sourcemaps": "1.9.1",
    "gulp-typescript": "^3.1.3",
    "gulp-util": "3.0.8",
    "jsdom": "^11.11.0",
    "merge-stream": "^1.0.1",
    "node-pty": "0.7.6",
    "nodemon": "1.10.2",
    "nyc": "^11.8.0",
    "puppeteer": "^1.15.0",
    "sorcery": "^0.10.0",
    "source-map-loader": "^0.2.4",
    "ts-loader": "^4.5.0",
    "tslint": "^5.9.1",
    "tslint-consistent-codestyle": "^1.13.0",
    "typescript": "3.5",
    "utf8": "^3.0.0",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "webpack": "^4.17.1",
    "webpack-cli": "^3.1.0",
    "xterm-addon-attach": "0.1.0-beta8",
    "xterm-addon-search": "0.1.0-beta4",
    "xterm-addon-web-links": "0.1.0-beta6",
    "zmodem.js": "^0.1.5"
  },
  "scripts": {
    "start": "node demo/start",
    "start-debug": "node --inspect-brk demo/start",
    "start-zmodem": "node demo/zmodem/app",
    "lint": "tslint 'src/**/*.ts' './demo/**/*.ts'",
    "test": "npm run mocha",
    "posttest": "npm run lint",
    "test-debug": "node --inspect-brk node_modules/.bin/gulp test",
    "test-suite": "gulp mocha-suite --test",
    "test-coverage": "nyc -x gulpfile.js -x '**/*test*' npm run mocha",
    "test-api": "mocha \"**/*.api.js\"",
    "mocha": "gulp test",
    "prebuild": "tsc -b ./src/tsconfig.all.json",
    "build": "gulp build",
    "prepare": "npm run prebuild",
    "prepublishOnly": "npm run build",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "watch": "tsc -b -w ./src/tsconfig.all.json --preserveWatchOutput"
  }
}
